/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as QuizGameRouteImport } from './routes/quiz-game'
import { Route as LeaderboardRouteImport } from './routes/leaderboard'
import { Route as LandingRouteImport } from './routes/landing'
import { Route as DemoRouteImport } from './routes/demo'
import { Route as ContractRouteImport } from './routes/contract'
import { Route as BackendDemoRouteImport } from './routes/backend-demo'
import { Route as AiQuizRouteImport } from './routes/ai-quiz'
import { Route as IndexRouteImport } from './routes/index'

const QuizGameRoute = QuizGameRouteImport.update({
  id: '/quiz-game',
  path: '/quiz-game',
  getParentRoute: () => rootRouteImport,
} as any)
const LeaderboardRoute = LeaderboardRouteImport.update({
  id: '/leaderboard',
  path: '/leaderboard',
  getParentRoute: () => rootRouteImport,
} as any)
const LandingRoute = LandingRouteImport.update({
  id: '/landing',
  path: '/landing',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoRoute = DemoRouteImport.update({
  id: '/demo',
  path: '/demo',
  getParentRoute: () => rootRouteImport,
} as any)
const ContractRoute = ContractRouteImport.update({
  id: '/contract',
  path: '/contract',
  getParentRoute: () => rootRouteImport,
} as any)
const BackendDemoRoute = BackendDemoRouteImport.update({
  id: '/backend-demo',
  path: '/backend-demo',
  getParentRoute: () => rootRouteImport,
} as any)
const AiQuizRoute = AiQuizRouteImport.update({
  id: '/ai-quiz',
  path: '/ai-quiz',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/ai-quiz': typeof AiQuizRoute
  '/backend-demo': typeof BackendDemoRoute
  '/contract': typeof ContractRoute
  '/demo': typeof DemoRoute
  '/landing': typeof LandingRoute
  '/leaderboard': typeof LeaderboardRoute
  '/quiz-game': typeof QuizGameRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/ai-quiz': typeof AiQuizRoute
  '/backend-demo': typeof BackendDemoRoute
  '/contract': typeof ContractRoute
  '/demo': typeof DemoRoute
  '/landing': typeof LandingRoute
  '/leaderboard': typeof LeaderboardRoute
  '/quiz-game': typeof QuizGameRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/ai-quiz': typeof AiQuizRoute
  '/backend-demo': typeof BackendDemoRoute
  '/contract': typeof ContractRoute
  '/demo': typeof DemoRoute
  '/landing': typeof LandingRoute
  '/leaderboard': typeof LeaderboardRoute
  '/quiz-game': typeof QuizGameRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/ai-quiz'
    | '/backend-demo'
    | '/contract'
    | '/demo'
    | '/landing'
    | '/leaderboard'
    | '/quiz-game'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/ai-quiz'
    | '/backend-demo'
    | '/contract'
    | '/demo'
    | '/landing'
    | '/leaderboard'
    | '/quiz-game'
  id:
    | '__root__'
    | '/'
    | '/ai-quiz'
    | '/backend-demo'
    | '/contract'
    | '/demo'
    | '/landing'
    | '/leaderboard'
    | '/quiz-game'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AiQuizRoute: typeof AiQuizRoute
  BackendDemoRoute: typeof BackendDemoRoute
  ContractRoute: typeof ContractRoute
  DemoRoute: typeof DemoRoute
  LandingRoute: typeof LandingRoute
  LeaderboardRoute: typeof LeaderboardRoute
  QuizGameRoute: typeof QuizGameRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/quiz-game': {
      id: '/quiz-game'
      path: '/quiz-game'
      fullPath: '/quiz-game'
      preLoaderRoute: typeof QuizGameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/leaderboard': {
      id: '/leaderboard'
      path: '/leaderboard'
      fullPath: '/leaderboard'
      preLoaderRoute: typeof LeaderboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/landing': {
      id: '/landing'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof LandingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo': {
      id: '/demo'
      path: '/demo'
      fullPath: '/demo'
      preLoaderRoute: typeof DemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contract': {
      id: '/contract'
      path: '/contract'
      fullPath: '/contract'
      preLoaderRoute: typeof ContractRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/backend-demo': {
      id: '/backend-demo'
      path: '/backend-demo'
      fullPath: '/backend-demo'
      preLoaderRoute: typeof BackendDemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ai-quiz': {
      id: '/ai-quiz'
      path: '/ai-quiz'
      fullPath: '/ai-quiz'
      preLoaderRoute: typeof AiQuizRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AiQuizRoute: AiQuizRoute,
  BackendDemoRoute: BackendDemoRoute,
  ContractRoute: ContractRoute,
  DemoRoute: DemoRoute,
  LandingRoute: LandingRoute,
  LeaderboardRoute: LeaderboardRoute,
  QuizGameRoute: QuizGameRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
